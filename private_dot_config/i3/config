#########################################################
#█▀▀ ▄▀█ █▄▄ █ █▀█ █▀ █▀█ █░█ ▀█ ▄▀█ █▀▄ █▀▀ █░█        #
#█▀░ █▀█ █▄█ █ █▄█ ▄█ █▄█ █▄█ █▄ █▀█ █▄▀ ██▄ ▀▄▀        #
#########################################################
#######################
#   General Setting   #
#######################
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $up k
set $right l
set $down j
set $left h


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango: JetBrainsMono Nerd Font Mono 12
font pango:Iosevka Nerd Font 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

#####################
# workspace layout: #
#####################

# default i3 tiling mode:
workspace_layout default

# i3 stacking layout:
# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# i3 tabbed layout:
# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed
##############################
# extra options for windows: #
##############################

for_window [class="^.*"] border pixel 0

# thin borders
# hide_edge_borders both

# Set inner/outer gaps
gaps inner 6
gaps outer 6

# show window title bars (not officially supported with i3gaps)
#default_border normal

# window title alignment
#title_align center


#############################################
# autostart applications/services on login: #
#############################################
# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

## Dunst
exec_always --no-startup-id dunst --config ~/.config/dunst/dunstrc

######################
# compositor - picom #
######################
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
# install picom package (yay -S picom)
# start using default config
#
# for custom config:
#exec_always --no-startup-id picom --config ~/.config/picom.conf
#


# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor and set wallpaper:
exec_always --no-startup-id sleep 3;
exec_always --no-startup-id ~/.config/i3/scripts/i3_detect_displays.sh; feh --bg-fill --randomize ~/.config/wallpapers
exec_always --no-startup-id ~/.config/polybar/launch.sh --my-colorblocks
# exec_always --no-startup-id "setxkbmap -layout 'us,br' -variant 'alt-intl,abnt2' -option 'grp:alt_caps_toggle' -option 'caps:escape'"
# exec_always --no-startup-id setxkbmap -layout 'us,br' -variant 'alt-intl,abnt2' -option 'grp:alt_caps_toggle,caps:swapescape'

# Autostart apps as you like
exec --no-startup-id spotify
exec --no-startup-id discord
exec --no-startup-id obsidian
exec --no-startup-id ghostty
exec --no-startup-id brave-nightly
# exec --no-startup-id slack
#exec --no-startup-id sleep 3 && thunar

# exec --no-startup-id ~/.screenlayout/i3_detect_displays.sh

# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

### Multimedia Keys ####

###### ALSA CONTROLS #######

# volume
# bindsym XF86AudioRaiseVolume exec --no-startup-id amixer sset Master 5%+
# bindsym XF86AudioLowerVolume exec --no-startup-id amixer sset Master 5%-

# gradular volume control
# bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id amixer sset Master 1%+
# bindsym $mod+XF86AudioLowerVolume exec --no-startup-id amixer sset Master 1%-

# mute
# bindsym XF86AudioMute exec --no-startup-id amixer sset Master toggle

##### Pulse Audio controls ######
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% #decrease sound volume
bindsym XF86AudioMute        exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # mute

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% #increase sound volume
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% #decrease sound volume


# audio control
bindsym XF86AudioPlay  exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext  exec playerctl next
bindsym XF86AudioPrev  exec playerctl previous

# Redirect sound to headphones
#bindsym $mod+p exec /usr/local/bin/switch-audio-port


# Backlight control
bindsym XF86MonBrightnessUp exec xbacklight +5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

bindsym XF86MonBrightnessDown exec xbacklight -5 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

### App shortcuts
bindsym $mod+b exec brave
bindsym $mod+Shift+u exec librewolf --private-window
bindsym $mod+n exec thunar
#bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"
bindsym $mod+p exec --no-startup-id flameshot gui

# Scratchpad para um terminal rápido (drop-down)
# Move a primeira janela do Alacritty que encontrar para o scratchpad
for_window [class="^kitty$" instance="^kitty-scratchpad$"] move to scratchpad
# Atalho para invocar/esconder o terminal
bindsym $mod+Shift+Return exec kitty --class kitty-scratchpad; [class="^kitty$" instance="^kitty-scratchpad$"] scratchpad show

# Scratchpad para Git (lazygit)
for_window [title="^lazygit$"] move to scratchpad
# Atalho para invocar/esconder o lazygit
bindsym $mod+g exec kitty -t lazygit -e lazygit; [title="^lazygit$"] scratchpad show

##################
# floating rules #
##################
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar


# set floating (nontiling) for apps needing it
# to get class in terminal type: `xprop | grep WM_CLASS | awk '{ print $4 }'`

for_window [class="pavucontrol" instance="pavucontrol"] floating enable
for_window [class="pavucontrol" instance="pavucontrol"] resize set 1024 768
for_window [class="pavucontrol" instance="pavucontrol"] move position center
for_window [class="pavucontrol" instance="pavucontrol"] border pixel 1

#for_window [class="Yad" instance="yad"] floating enable
#for_window [class="Galculator" instance="galculator"] floating enable
#for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
#for_window [class="Xsane" instance="xsane"] floating enable
#for_window [class="qt5ct" instance="qt5ct"] floating enable
#for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
#for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
#for_window [class="Pamac-manager"] floating enable
#for_window [window_role="About"] floating enable

# floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
# set border of floating window
#for_window [class="urxvt"] border pixel 1

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class=".*"] resize set 640 480 #to change size of all floating windows

# set position of floating window
#for_window [class=".*"] move position center


######################################
#          keybindings               #
######################################
# start a terminal
bindsym $mod+Return exec ghostty

# kill focused window
bindsym $mod+q kill

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'" # exit-menu
# bindsym $mod+Shift+e exit

#build nixos
bindsym $mod+Shift+b exec --no-startup-id kitty -e nixos-rebuild switch --flake ~/.dotfiles.nix/.#work --impure --use-remote-sudo --show-trace --print-build-logs --verbose


# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run

#######################################################
#######  Application menu handled by rofi: ############
#######################################################


# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)
bindsym $mod+d exec --no-startup-id ~/.config/rofi/launchers/type-2/launcher.sh
bindsym $mod+Shift+x exec --no-startup-id ~/.config/rofi/powermenu/type-2/powermenu.sh
# bindsym F9 exec rofi -modi drun -show drun \
#         -config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+w /F10 optional disabled)
bindsym $mod+w exec --no-startup-id ~/.config/rofi/launchers/type-1/window.sh

## rofi bindings for screenshot
bindsym $mod+Shift+p exec --no-startup-id ~/.config/rofi/applets/bin/screenshot.sh

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)
exec --no-startup-id greenclip daemon>/dev/null
bindsym $mod+c exec --no-startup-id ~/.config/rofi/greenclip/type-5/greenclip.sh

# keybinding in fancy rofi (automated):
#bindsym F1 exec ~/.config/i3/scripts/keyhint-2

##########################################
#       configuration for window         #
##########################################

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split (vertical,horizontal,toggle)
bindsym $mod+x split horizontal
bindsym $mod+v split vertical

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

##########################################
# configurations for workspace keybinds: #
##########################################

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move workspace to other monitor
bindsym $mod+o move workspace to output next

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 10 px or 10 ppt
        bindsym $down resize grow height 10 px or 10 ppt
        bindsym $up resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "move" {
        bindsym $left move left
        bindsym $down move down
        bindsym $up move up
        bindsym $right move right

        bindsym Left move left
        bindsym Down move down
        bindsym Up move up
        bindsym Right move right

        # back to normal: Enter or Escape or $mod+m
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+m mode "default"
}
bindsym $mod+m mode "move"

# open new empty workspace
bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

##########################################
# configuration for workspace behaviour: #
##########################################
# bind program to workspace and focus to them on startup:
# to get class in terminal type: `xprop | grep WM_CLASS | awk '{ print $4 }'`

# Inicie aplicativos nos workspaces corretos
# Use "assign [class="..."] $wsX" para que apps sempre abram onde devem

assign [class="Spotify"] $ws1
assign [class="obsidian"] $ws2
assign [class="^Slack$|^discord$"] $ws3
assign [class="Brave-browser-*"] $ws4
assign [class="com.mitchellh.ghostty"] $ws5

# assign [class="org.wezfurlong.wezterm"] $ws5
# assign [class="Todoist"] $ws3
# assign [class="Slack"] $ws2
#assign [class="Kitty"] $ws5
#assign [class="Thunar"] $ws6


# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command 
#workspace $ws1 output eDP-1
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0


######################################
# color settings for bar and windows #
######################################

# Set colours various window states
# Syntax: client.<class> <border> <background> <text> [<indicator> [<child_border>]]
# The available classes are:
# client.focused: The window that has focus.
# client.focused_inactive: The most recently focused view within a container which is not focused.
# client.placeholder: Ignored (present for i3 compatibility).
# client.unfocused: A view that does not have focus.
# client.urgent: A view with an urgency hint. Note: Native Wayland windows do not support urgency. Urgency only works for Xwayland windows.

#The meaning of each color is:
# border: The border around the title bar.
# background: The background of the title bar.
# text: The text color of the title bar.
# indicator: The color used to indicate where a new view will open. In a tiled container, this would paint the right border of the current view if a new view would be opened to the right.
# child_border: The border around the view itself.

# The default colors are:
# class	        border	background	text    indicator	child_border
# background	n/a	    #ffffff     n/a	    n/a	        n/a
# focused	    #4c7899	#285577	    #ffffff	#2e9ef4	    #285577
# focused_inactive	#333333	#5f676a	#ffffff	#484e50	    #5f676a
# unfocused	    #333333	#222222	    #888888	#292d2e	    #222222
# urgent	    #2f343a	#900000	    #ffffff	#900000	    #900000
# placeholder	#000000	#0c0c0c	    #ffffff	#000000 	#0c0c0c

# client.focused           #9aa5ce #364A82 #c0caf5 #9aa5ce   #9aa5ce
# client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
# client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d


# set primary Rosé Pine colorscheme colors
set $base           #191724
set $surface        #1f1d2e
set $overlay        #26233a
set $muted          #6e6a86
set $subtle         #908caa
set $text           #e0def4
set $love           #eb6f92
set $gold           #f6c177
set $rose           #ebbcba
set $pine           #31748f
set $foam           #9ccfd8
set $iris           #c4a7e7
set $highlightlow   #21202e
set $highlightmed   #403d52
set $highlighthigh  #524f67

# Teming border and Windows --------------
# target                 title     bg    text   indicator  border
client.focused           $rose     $base $text  $rose      $rose
client.focused_inactive  $text     $base $text  $subtle    $surface
client.unfocused         $text     $base $text  $overlay   $overlay
client.urgent            $text     $base $text  $love      $love
client.placeholder       $base     $base $text  $overlay   $overlay
client.background        $base

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         status_command i3status
# }

