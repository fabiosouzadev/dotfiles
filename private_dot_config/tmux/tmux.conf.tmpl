# vim: filetype=conf
### : << eof
### https://github.com/fabiosouzadev/dotfiles
###

### INSTALLATION NOTES ####
# - SESSION
#   - New session       Prefix + Ctrl+c
#   - Rename session    Prefix + Ctrl+r
#   - Save session      Prefix + Ctrl+s
# - WINDOW
#   - New window:       Prefix + c
#   - Rename window:    Prefix + r
#   - Next window:      Prefix + Ctrl+n
#   - Previous window:  Prefix + Ctrl+p
#   - Last used window: Prefix + l
#   - Quick window:     Prefix + w
#   - Close window:     Prefix + &

# - PANES
#   - Vertical split:   Prefix + %
#   - Horizontal split: Prefix + "
#   - Close pane:
#   - Zoom pane:       Prefix + - 
#   - Reset pane:      Prefix + Ctrl-0
#   - Swap pane:       Prefix + > # swap current pane with the next one
#   - Swap pane:       Prefix + < # swap current pane with the previous one
#   - H to V:          Prefix + Space # Move Tmux Pane from Vertical to Horizontal
#   - Move to left:    Prefix + {
#   - Move to right:   Prefix +

# ==========================
# ===  General settings  ===
# ==========================
set -g status-position top
set -ga terminal-overrides ",*256col*:Tc:RGB"
set -sg escape-time 0
set -sg repeat-time 600
setw -g mode-keys vi
set -g history-limit 100000

# nvim compatibility - fix the cursor problem
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# ==========================
# ===   Key bindings     ===
# ==========================

# Session
bind C-c new-session
bind C-r command-prompt -I "#{session_name}" "rename-session '%%'"
# bind C-f command-prompt -p find-session 'switch-client -t %%'

# Window
bind c new-window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind C-p previous-window   # select previous window
bind C-n next-window       # select next window
bind -r l last-window       # move to last active window
bind Tab last-window        # move to last active window
bind -r C-h select-window -t :-   # Jump to window on the left
bind -r C-l select-window -t :+   # Jump to window on the right

# Panes
# bind v split-window -h -c "#{pane_current_path}"
# bind x split-window -v -c "#{pane_current_path}"
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind + resize-pane -Z       # Zoom pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Source .tmux.conf as suggested in `man tmux`
# bind s \
#     source-file ~/.config/tmux/tmux.conf \;\
#     display 'Reloaded tmux config.'
# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# (OS X) Fix pbcopy/pbpaste for old tmux versions (pre 2.6)
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================

bind Enter copy-mode # enter copy mode
bind P paste-buffer
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'



# ==============================================
# ===                 Popup                  ===
# ==============================================
# Display lazygit
bind -r g display-popup -d '#{pane_current_path}' -w90% -h90% -E lazygit
# bind -r o display-popup -d '#{pane_current_path}' -w90% -h90% -E lazydocker
bind -r k display-popup -d '#{pane_current_path}' -w90% -h90% -E k9s
bind -r z display-popup -d '#{pane_current_path}' -w90% -h90% -E yazi

# ============================
# ===       Run AI        ===
# ============================#

# Aichat
bind -r C-a display-popup -d '#{pane_current_path}' -w90% -h90% -E "aichat"

# LLM
# bind C-l display-popup -d '#{pane_current_path}' -w90% -h90% -E "llm -m ollama:llama3"

# Aider
# bind C-i display-popup -d '#{pane_current_path}' -w90% -h90% -E "aider --model ollama:deepdeek-coder"
# ==============================================
# ===                 Yazi                  ===
# ==============================================
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM


# ==============================================
# ===                 Theme                  ===
# ==============================================

#Catpuccin
set -g @plugin 'catppuccin/tmux#v2.1.3' # See https://github.com/catppuccin/tmux/tags for additional tag

set -wg automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right ""


set -g @catppuccin_flavour 'mocha' # latte,frappe, macchiato or mocha

## Pane
## Window
set -g @catppuccin_window_status_style "basic" # basic, rounded, slanted, custom, or none

set -g @catppuccin_window_text " #W"
set -g @catppuccin_window_number "#I"
set -g @catppuccin_window_current_text " #W"
set -g @catppuccin_window_current_number "#I"

## Status line
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_user}"
set -ag status-right "#{E:@catppuccin_status_host}"

#set -g @catppuccin_status_right_separator "█ "

###
#set -g @catppuccin_window_default_fill "number"
#set -g @catppuccin_window_default_text "#W"

#set -g @catppuccin_window_current_fill "number"
#set -g @catppuccin_window_current_text "#W"
#set -g @catppuccin_window_right_separator "█ "

#set -g @catppuccin_status_modules_right "session user host"
#set -g @catppuccin_directory_text "#{pane_current_path}"


# ============================
# ===       Plugins        ===
# ============================

set -g @plugin 'tmux-plugins/tpm'  #prefix + I (Install), prefix + U (update), prefix + alt + U (remove)
# Yank
set -g @plugin 'tmux-plugins/tmux-yank'

#Session

### Resurrect ###
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir '$HOME/.config/tmux/resurrect'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-capture-pane-contents 'on'

set -g @resurrect-hook-post-save-all 'eval $(xdotool getwindowgeometry --shell $WINDOWID); echo 0,$X,$Y,$WIDTH,$HEIGHT > $HOME/.config/tmux/resurrect/geometry'
set -g @resurrect-hook-pre-restore-all 'wmctrl -i -r $WINDOWID -e $(cat $HOME/.config/tmux/resurrect/geometry)'

# for neovim
set -g @resurrect-strategy-nvim 'session'

### Continuum ####
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-save-interval '10'


set -g @plugin 'christoomey/vim-tmux-navigator'

# ============================
# ===       Run TPM        ===
# ============================

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$HOME/.config/tmux/plugins/tpm/tpm'
